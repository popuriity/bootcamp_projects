-- Restaurant Owners
-- create 5 table
-- 1x Fact, 4x Dimension
-- search google, how to add foreign key
-- write SQL 3x queries to analyze data (require 1x subquery)


-- SQLite command  
.mode markdown
.head on
.schema

----------------CREAT TABLE-----------------------
--CREATE fact table orders--
CREATE TABLE orders(
  order_id INT PRIMARY KEY,
  order_date TEXT,
  staff_id INT,
  customer_id INT,
  amount REAL,
  FOREIGN KEY(customer_id)
      REFERENCES customer(customer_id),
  FOREIGN KEY (staff_id)
      REFERENCES staff(staff_id) 
);

INSERT INTO orders VALUES
	(1, '2022-08-05', 1, 1, 216),
  (2, '2022-08-05', 2, 2, 348),
  (3, '2022-08-05', 3, 3, 99),
  (4, '2022-08-06', 1, 4, 99),
  (5, '2022-08-06', 2, 5, 50),
  (6, '2022-08-06', 3, 6, 204),
  (7, '2022-08-06', 1, 7, 147),
  (8, '2022-08-06', 2, 3, 25),
  (9, '2022-08-07', 3, 1, 25),
  (10, '2022-08-07', 1, 2, 177),
  (11, '2022-08-07', 2, 4, 70),
  (12, '2022-08-07', 3, 7, 99);

--CREATE dim table customers--
CREATE TABLE  customers(
  customer_id INT PRIMARY KEY,
  firstname TEXT,
  lastname TEXT,
  gender TEXT,
  phone TEXT
);

INSERT INTO customers VALUES
  (1, 'Jennie', 'Kim', 'F', '011-2482673'),
  (2, 'Tim', 'Goyer', 'M', '023-7357167'),
  (3, 'Roseanne', 'Park', 'F', '058-704112'),
  (4, 'Victor', 'Crump', 'M', '049-8917847'),
  (5, 'Lalisa', 'Manobal', 'F', '016-9027944'),
  (6, 'Patrick', 'Gray', 'M', '071-6503653'),
  (7, 'Jisoo', 'Kim', 'F', '034-4669466');

--CREATE dim table staff--
CREATE TABLE staff(
  staff_id INT PRIMARY KEY,
  firstname TEXT,
  lastname TEXT,
  status TEXT
);

INSERT INTO staff VALUES
  (1, 'Kathy', 'Lee', 'FullTime'),
  (2, 'Harry', 'Morgan', 'FullTime'),
  (3, 'Emmy', 'Flint', 'PartTime');

--CREATE dim table sales--
CREATE TABLE sales(
  sales_id INT PRIMARY KEY,
  order_id INT,
  menu_id INT, 
  quantity INT,
  FOREIGN KEY(menu_id)
       REFERENCES menu(menu_id),
  FOREIGN KEY (order_id)
       REFERENCES orders(order_id) 
);

INSERT INTO sales VALUES
  (1, 1, 101, 2),
  (2, 1, 302, 1),
  (3,	2, 102,	1),
  (4,	2, 103,	1),
  (5,	2, 202,	2),
  (6,	2, 301,	1),
  (7,	3, 101,	1),
  (8,	4, 101,	1),
  (9,	5, 202,	2),
  (10, 6, 103, 1),
  (11, 6,	201, 1),
  (12, 6,	301, 1),
  (13, 7,	102, 1),
  (14, 7,	302, 1),
  (15, 8,	202, 1),
  (16, 9,	202, 1),
  (17, 10, 103, 1),
  (18, 10, 302, 1),
  (19, 11, 201, 2),
  (20, 12, 101, 1);
  

CREATE TABLE menu (
  menu_id INT PRIMARY KEY,
  menu_name TEXT,
  type TEXT,
  unit_price
);

INSERT INTO menu VALUES
  (101, 'fish&chips', 'maindish', 99),
  (102, 'porkchop', 'maindish', 129),
  (103, 'beefsteak','maindish',159),
  (201, 'pudding', 'dessert', 35),
  (202, 'icecream', 'dessert',25),
  (301, 'water', 'beverage', 10),
  (302, 'cola', 'beverage', 18);

----------------QUERY DATA-----------------------
--1.Manager would like to track sales each staff have made.
SELECT
  o.staff_id,
  s.firstname || ' ' || s.lastname AS staff_name,
  SUM(o.amount) AS total_amount
FROM orders AS o , staff AS s
WHERE o.staff_id = s.staff_id
GROUP BY s.staff_id;

--2.Which menu is the most popular, excluding beverage.
SELECT
  m.menu_id,
  m.menu_name,
  m.type,
  SUM(s.quantity) AS total_unit_sales
FROM menu AS m
JOIN sales AS s
  ON m.menu_id = s.menu_id
WHERE m.type <> 'beverage'
GROUP BY m.menu_id
ORDER BY COUNT(*) DESC;

--3.What is each customer's favorite type of menu?
WITH sub AS (
  SELECT
    c.customer_id,
    c.firstname,
    s.quantity,
    m.menu_name,
    m.type
  FROM customers AS c
  JOIN orders AS o
    ON c.customer_id = o.customer_id
  JOIN sales AS s
    ON o.order_id = s.order_id
  JOIN menu AS m
    ON s.menu_id = m.menu_id
)

SELECT
  firstname, type, MAX(quantity)
  FROM sub
  GROUP BY customer_id ;
